@page "/counter"
@using SqliteWasmHelper
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@if (isLoading)
{
    <div class="loading-animation">Loading...</div>
}
else
{
    <div class="things-container">
        @foreach (var thing in Things)
        {
            <div class="thing-item">
                <p class="thing-id">ID: @thing.Id</p>
                <p class="thing-name">Name: @thing.Name</p>
            </div>
        }
    </div>
}

@code {
    [Inject] ISqliteWasmDbContextFactory<ThingContext> Factory { get; set; } = null!;
    private int currentCount = 0;
    private static IComponentRenderMode pageRenderMode = InteractiveWebAssembly;
    private List<Thing> Things = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        using var ctx = await Factory.CreateDbContextAsync();
        ctx.Database.EnsureCreated();

        Things = ctx.Things.ToList();
        isLoading = false;
    }

    private async Task IncrementCount()
    {
        currentCount++;
        Thing NewThing = new();
        NewThing.Name = $"Thing {currentCount}";

        using var ctx = await Factory.CreateDbContextAsync();
        ctx.Database.EnsureCreated();

        ctx.Things.Add(NewThing);
        await ctx.SaveChangesAsync();

        Things = ctx.Things.ToList();
    }
}
